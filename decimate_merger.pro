;+
; PURPOSE:
;  This procedure is the second round of pruning insignificant
;  dendrogram leaves (the first being cnb_decimate_kernels). Leaves
;  that are less then a critical value of intensity higher than their
;  neighbors are pruned. 
;
; INPUTS:
;  merger: The merger matrix generated by cnb_mergefind. An NxN array
;  labeling the intensity value at which each pair of kernels merge
;  with each other.
;  kernels: The (1D) indices of the kernels
;  minicube: The data
;  
; KEYWORD PARAMETERS:
;  ALL_NEIGHBORS: Set to include 26 and not 6 neighbors
;  DELTA: The minimum intensity (in units of sigma) a kernel must be
;         above the background. 
;  SIGMA: The 1 sigma noise in the image
;  MINPIX: The minimum number of pixels that must uniquely belong to
;          a leaf. Currently not implemented.
;
; NOTES:
;  Currently, the MINPIX option is not implemented. It seems to be a
;  big computational burden, and almost always redundant with the
;  delta criterion. We should do this pruning step during
;  cnb_mergefind, by tracking the min/max area associated with each
;  pair of leaves.
;
; MODIFICATION HISTORY:
;  Feb 2010: Written by Chris Beaumont
;-
pro decimate_merger, merger, kernels, minicube, npix, $
                          all_neighbors = all_neighbors, $
                          delta = delta, sigma = sigma, $
                          minpix = minpix

  compile_opt idl2
  assert, n_params() eq 4
  nk = n_elements(kernels)

  if n_elements(sigma) eq 0 then message, 'must provide sigma'
  if n_elements(delta) eq 0 then message, 'must provide delta'
  if n_elements(minpix) eq 0 then message, 'must provide minpix'
  
  good_kernels = bytarr(nk) + 1
  delta_rejects = 0
  area_rejects = 0
  order = sort(merger[indgen(nk), indgen(nk)])
  for i = 0, nk - 1, 1 do begin
     keep = where(good_kernels)
     lev = merger[order[i],keep]
     s = reverse(sort(lev))

     ;- the peak is too shallow, or too small
     if (lev[s[0]] - lev[s[1]]) / sigma lt delta then begin
        ;- this can happen, but is due to precison limitations 
        ;- in mergefind. We know from decimate_kernels that 
        ;- a safe contour exists, so lets use that one
        merger[order[i], keep[s[1]]] = lev[s[0]] - sigma * delta
        merger[keep[s[1]], order[i]] = lev[s[0]] - sigma * delta
     endif

     ;- the peak is too small
     np = npix[order[i], keep]
     if min(np) lt minpix then begin
        area_rejects++
        good_kernels[order[i]] = 0
        continue
     endif
  endfor
  keep = where(good_kernels, ct)
  assert, ct ge 1

  message, 'Kernels rejected for area: '+string(area_rejects), /con
  message, 'Kernels rejected for contrast: '+string(delta_rejects), /con

  kernels = kernels[keep]
  merger = merger[keep, *]
  merger = merger[*, keep]
  return
end
